---
- name: create temporary folder
  tempfile:
    state: directory
    suffix: tempdeploysource
  register: deploysrc
  when: deploylist is defined and
        (deploylist is defined and deploy_wars == 'yes')

- name: download all war files
  get_url:
    url: "{{ item }}"
    dest: "{{ deploysrc.path }}"
  with_items: '{{ deploylist }}'
  when: deploylist is defined and
        (deploylist is defined and deploy_wars == 'yes')

- name: list deploy file
  shell: "ls {{ deploysrc.path }}/"
  args:
      chdir: /home/{{ user['name'] }}
      executable: /bin/bash
  register: deployfiles
  when: deploylist is defined and
        (deploylist is defined and deploy_wars == 'yes')

- name: create deploy file
  file:
    path: "{{ deploysrc.path }}/{{ item }}.dodeploy"
    state: touch
    mode: 0755
  with_items: "{{ deployfiles.stdout_lines }}"
  when: deploylist is defined and
        (deploylist is defined and deploy_wars == 'yes')

- name: do deploy file
  shell: "cp -f {{ deploysrc.path }}/* {{ eaphome }}/deployments/"
  args:
      chdir: /home/{{ user['name'] }}
      executable: /bin/bash
  when: deploylist is defined and
        (deploylist is defined and deploy_wars == 'yes')

- name: wait for deploy to finish
  wait_for:
      path: "{{ eaphome }}/deployments/{{ item }}.deployed"
      state: present
      msg: "Timeout 1 minutes reached for wait for deploy {{ item }}"
      delay: 10
      timeout: 60
  with_items: "{{ deployfiles.stdout_lines }}"
  when: deployfiles is defined and (deployfiles.stdout_lines|length > 0)